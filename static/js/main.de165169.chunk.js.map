{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo.js","app.js","index.js"],"names":["ToDoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","Form","onSubmit","preventDefault","reset","handleSubmit","Group","Label","Text","Control","placeholder","onChange","defaultValue","type","min","max","Button","TodoList","ListGroup","list","map","Item","variant","complete","className","toString","key","_id","action","onClick","handleComplete","text","assignee","ToDo","prev","setList","useEffect","difficulty","Navbar","bg","filter","length","Math","random","id","i","currentList","listItem","App","React","Component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.de165169.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport {Button,Form} from 'react-bootstrap';\n\n\n const ToDoForm = (props)=> {\n  const [item,setItem]= useState({});\n\n  const handleInputChange = (e) =>{\n    setItem({...item,[e.target.name]:e.target.value})\n  }\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    const rester = {};\n    setItem(rester)\n\n  }\n\n\n  return(\n    \n     <>\n        <h3>Add Item</h3>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n          <Form.Label>\n            <Form.Text>To Do Item</Form.Text>\n            <Form.Control\n              name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              onChange={handleInputChange}\n            />\n          </Form.Label>\n          <Form.Label>\n            <Form.Text>Difficulty Rating</Form.Text>\n            <Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            <Form.Text>Assigned To</Form.Text>\n            <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </Form.Label>\n          <Button type='submit'>Add Item</Button>\n          {/* <button></button> */}\n          </Form.Group>\n\n        </Form>\n      </>\n    \n  \n  )\n\n  \n  \n}\n\nexport default ToDoForm;\n\n// class TodoForm extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = { item: {} };\n//   }\n//   handleInputChange = e => {\n//     this.setState({ item: {...this.state.item, [e.target.name]: e.target.value } });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     e.target.reset();\n//     this.props.handleSubmit(this.state.item);\n//     const item = {};\n//     this.setState({item});\n//   };\n\n//   render() {\n//     return (\n      // <>\n      //   <h3>Add Item</h3>\n      //   <form onSubmit={this.handleSubmit}>\n      //     <label>\n      //       <span>To Do Item</span>\n      //       <input\n      //         name=\"text\"\n      //         placeholder=\"Add To Do List Item\"\n      //         onChange={this.handleInputChange}\n      //       />\n      //     </label>\n      //     <label>\n      //       <span>Difficulty Rating</span>\n      //       <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={this.handleInputChange} />\n      //     </label>\n      //     <label>\n      //       <span>Assigned To</span>\n      //       <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={this.handleInputChange} />\n      //     </label>\n      //     <button>Add Item</button>\n      //   </form>\n      // </>\n//     );\n//   }\n// }\n\n","import React from 'react';\nimport {ListGroup} from 'react-bootstrap';\n\nconst TodoList = (props) =>{\n\n    return (\n      <ListGroup>\n        {props.list.map(item => (\n          <ListGroup.Item\n            variant = {item.complete?'danger':'primary'}\n            className={`complete-${item.complete.toString()}`}\n            key={item._id}\n            action\n          >\n            <span onClick={() => props.handleComplete(item._id)}>\n              {item.text} <strong> {item.assignee} </strong>\n            </span>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    );\n}\n\nexport default TodoList;\n","import React ,{useState,useEffect}from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport {Navbar} from 'react-bootstrap';\n\n\nimport './todo.scss';\n\nconst ToDo = (prev)=>{\n\n  const [list, setList] = useState([]);\n  \n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list,item])\n\n  }\n  const toggleComplete = id=>{\n    let item = list.filter(i=> i._id === id)[0]||{};\n    if(item._id){\n      item.complete = !item.complete;\n      let currentList = list.map(listItem=> listItem._id === item._id? item: listItem);\n      setList(currentList);\n\n    }\n  }\n  const firstRender = () => {\n    let firstList = [\n            { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n            { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n            { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n            { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n            { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n          ];\n      \n          setList(firstList);\n  }\n  useEffect(firstRender,[])\n\n  return(\n    <>\n      <header>\n        \n\n      <Navbar bg='dark'>\n          <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n          </h2>\n      </Navbar>\n      </header>\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm handleSubmit={addItem} />\n          </div>\n\n          <div>\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n            />\n          </div>\n        </section>\n    </>\n  )\n\n\n}\nexport default ToDo;\n\n// class ToDo extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: [],\n//     };\n//   }\n\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item]});\n//   };\n\n//   toggleComplete = id => {\n\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n//       this.setState({list});\n//     }\n\n//   };\n\n//   componentDidMount() {\n//     let list = [\n//       { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n//       { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n//       { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n//       { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n//       { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n//     ];\n\n//     this.setState({list});\n//   }\n\n//   render() {\n//     return (\n//       <>\n        // <header>\n        //   <h2>\n        //   There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n        //   </h2>\n        // </header>\n\n        // <section className=\"todo\">\n\n        //   <div>\n        //     <TodoForm handleSubmit={this.addItem} />\n        //   </div>\n\n        //   <div>\n        //     <TodoList\n        //       list={this.state.list}\n        //       handleComplete={this.toggleComplete}\n        //     />\n        //   </div>\n        // </section>\n//       </>\n//     );\n//   }\n// }\n\n","import React from 'react';\n\nimport ToDo from './components/todo/todo.js';\n\nimport './app.scss';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ToDo />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}