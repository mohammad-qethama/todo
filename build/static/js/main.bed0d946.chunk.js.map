{"version":3,"sources":["hooks/todo/form-hook.js","components/todo/form.js","components/todo/list.js","hooks/todo/AJAX-hook.js","components/todo/todo-connected.js","app.js","index.js"],"names":["useForm","props","useState","item","setItem","e","target","name","value","preventDefault","reset","handleSubmit","ToDoForm","handleInputChange","Form","onSubmit","Group","Label","Text","Control","placeholder","onChange","defaultValue","type","min","max","Button","TodoList","list","map","Toast","onClose","handleDelete","_id","key","Header","closeLabel","Badge","pill","variant","complete","onClick","handleComplete","assignee","Body","className","text","difficulty","todoAPI","useAJAX","setList","_getTodoItems","axios","get","headers","mode","cache","then","res","data","results","catch","console","error","useEffect","id","filter","i","url","put","listItem","due","Date","post","delete","ToDo","_toggleComplete","_addItem","_deleteComplete","Navbar","bg","length","App","React","Component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.bed0d946.chunk.js","sourcesContent":["import {useState} from 'react';\n\nconst useForm = (props)=>{\n  const [item,setItem]= useState({})\n\n  const handleSubmit = (e)=> {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    const rester = {};\n    setItem(rester)\n  }\n\n  const handleInputChange = (e)=>{\n    setItem({...item,[e.target.name]:e.target.value});\n\n  }\n\n  return(\n    [item,handleInputChange,handleSubmit]\n  )\n\n}\nexport default useForm;","import React from 'react';\nimport {Button,Form} from 'react-bootstrap';\nimport useForm from '../../hooks/todo/form-hook.js';\n\n const ToDoForm = (props)=> {\n  const [,handleInputChange,handleSubmit] = useForm(props)\n\n\n  return(\n    \n     <>\n        <h3>Add Item</h3>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n          <Form.Label>\n            <Form.Text>To Do Item</Form.Text>\n            <Form.Control\n              name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              onChange={handleInputChange}\n            />\n          </Form.Label>\n          <Form.Label>\n            <Form.Text>Difficulty Rating</Form.Text>\n            <Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            <Form.Text>Assigned To</Form.Text>\n            <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </Form.Label>\n          <Button type='submit'>Add Item</Button>\n          {/* <button></button> */}\n          </Form.Group>\n\n        </Form>\n      </>\n    \n  \n  )\n\n  \n  \n}\n\nexport default ToDoForm;\n\n// class TodoForm extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = { item: {} };\n//   }\n//   handleInputChange = e => {\n//     this.setState({ item: {...this.state.item, [e.target.name]: e.target.value } });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     e.target.reset();\n//     this.props.handleSubmit(this.state.item);\n//     const item = {};\n//     this.setState({item});\n//   };\n\n//   render() {\n//     return (\n      // <>\n      //   <h3>Add Item</h3>\n      //   <form onSubmit={this.handleSubmit}>\n      //     <label>\n      //       <span>To Do Item</span>\n      //       <input\n      //         name=\"text\"\n      //         placeholder=\"Add To Do List Item\"\n      //         onChange={this.handleInputChange}\n      //       />\n      //     </label>\n      //     <label>\n      //       <span>Difficulty Rating</span>\n      //       <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={this.handleInputChange} />\n      //     </label>\n      //     <label>\n      //       <span>Assigned To</span>\n      //       <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={this.handleInputChange} />\n      //     </label>\n      //     <button>Add Item</button>\n      //   </form>\n      // </>\n//     );\n//   }\n// }\n\n","import React from 'react';\nimport {Toast , Badge} from 'react-bootstrap';\nimport './list.scss';\n\nconst TodoList = (props) =>{\n    return (\n      <div>\n        {props.list.map(item => (\n          <Toast\n            onClose = {()=>props.handleDelete(item._id)}\n            // className={`complete-${item.complete.toString()}`}\n            key={item._id}\n            \n          >\n            <Toast.Header closeLabel = 'DeleteTask'>\n              <Badge pill \n              variant = {item.complete?'danger':'success'}  \n              onClick={() => props.handleComplete(item._id)}\n              >  \n              {item.complete?'Completed':'Pending'}\n              </Badge>\n              <strong>{item.assignee}</strong>\n            </Toast.Header>\n            <Toast.Body>\n            <div className = 'toastBody'>\n              <span>\n                {item.text}\n                </span>\n              <small>\n              Difficulty:{item.difficulty}\n              </small>\n            </div>\n            </Toast.Body>\n          </Toast>\n        ))}\n      </div>\n    );\n}\n\nexport default TodoList;\n","import  { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\nconst useAJAX= () => {\nconst [list, setList] = useState([]);\n\n  const _deleteComplete =(id)=>{\n    let url = `${todoAPI}/${id}`\n    axios.delete(url , {\n      headers:{\n        mode:'cors',\n        cache:'no-cache',\n        'Content-Type':'application/json'\n      }\n    }).then(res=>{\n      setList(list.filter((listItem) => listItem._id !== res.data._id));    })\n  }\n\n  const _addItem = (item) => {\n    item.due = new Date();\n    axios.post(todoAPI, item ,{\n     \n      headers:{ \n        mode: 'cors',\n        cache: 'no-cache',\n        'Content-Type': 'application/json' }\n    })\n      .then(res => {\n        setList([...list, res.data])\n      })\n      .catch(console.error);\n  };\n\n  const _toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n\n      item.complete = !item.complete;\n\n      let url = `${todoAPI}/${id}`;\n\n      axios.put(url,item,{\n        headers:{\n          mode:'cors',\n          cache:'no-cache',\n          'Content-Type':'application/json'\n        }\n        \n      })\n        .then(res => {\n          setList(list.map(listItem => listItem._id === item._id ? res.data : listItem));\n        })\n        .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    axios.get(todoAPI, {\n      headers:{\n        mode:'cors',\n        cache:'no-cache',\n      }\n    })\n      .then(res => setList(res.data.results))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n\n  return [list,_getTodoItems, _toggleComplete, _addItem,_deleteComplete]\n}\n\nexport default useAJAX;","import React from 'react'\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport { Navbar } from 'react-bootstrap';\nimport useAJAX from '../../hooks/todo/AJAX-hook.js';\n\nimport './todo.scss';\n\n\n\nconst ToDo = () => {\n\n  const [list,, _toggleComplete, _addItem,_deleteComplete]= useAJAX()\n  return (\n    <>\n      <header>\n      <Navbar bg='dark'>\n\n        <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n        </h2>\n        </Navbar>\n\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={_addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={_toggleComplete}\n            handleDelete = {_deleteComplete}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\n\nimport ToDo from './components/todo/todo-connected.js';\n\nimport './app.scss';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ToDo />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}