{"version":3,"sources":["hooks/todo/form-hook.js","components/todo/form.js","context/todo/settings-context.js","components/todo/list.js","hooks/todo/AJAX-hook.js","components/todo/todo-connected.js","components/todo/settings.js","app.js","index.js"],"names":["useForm","props","useState","item","setItem","e","target","name","value","preventDefault","reset","handleSubmit","ToDoForm","handleInputChange","Form","onSubmit","Group","Label","Text","Control","placeholder","onChange","defaultValue","type","min","max","Button","SettingContext","React","createContext","SettingProvider","showCompleted","setShowCompleted","difficulty","setDifficulty","setting","itemPerPage","setItemPerPage","Provider","children","TodoList","settingContext","useContext","firstIndex","setFirstIndex","x","list","length","stopIndex","setStopIndex","useEffect","hidden","filter","complete","sort","a","b","slice","map","Toast","onClose","handleDelete","_id","key","Header","closeLabel","Badge","pill","variant","onClick","handleComplete","assignee","Body","className","text","todoAPI","useAJAX","setList","_getTodoItems","axios","get","headers","mode","cache","then","res","data","results","catch","console","error","id","i","url","put","listItem","due","Date","post","delete","ToDo","_toggleComplete","_addItem","_deleteComplete","Navbar","bg","SettingsPage","settings","changeOrder","ek","log","Dropdown","Toggle","Menu","Item","onSelect","as","htmlFor","parseInt","App","Component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.344a6115.chunk.js","sourcesContent":["import {useState} from 'react';\n\nconst useForm = (props)=>{\n  const [item,setItem]= useState({})\n\n  const handleSubmit = (e)=> {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    const rester = {};\n    setItem(rester)\n  }\n\n  const handleInputChange = (e)=>{\n    setItem({...item,[e.target.name]:e.target.value});\n\n  }\n\n  return(\n    [item,handleInputChange,handleSubmit]\n  )\n\n}\nexport default useForm;","import React from 'react';\nimport {Button,Form} from 'react-bootstrap';\nimport useForm from '../../hooks/todo/form-hook.js';\n\n const ToDoForm = (props)=> {\n  const [,handleInputChange,handleSubmit] = useForm(props)\n\n\n  return(\n    \n     <>\n        <h3>Add Item</h3>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n          <Form.Label>\n            <Form.Text>To Do Item</Form.Text>\n            <Form.Control\n              name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              onChange={handleInputChange}\n            />\n          </Form.Label>\n          <Form.Label>\n            <Form.Text>Difficulty Rating</Form.Text>\n            <Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            <Form.Text>Assigned To</Form.Text>\n            <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </Form.Label>\n          <Button type='submit'>Add Item</Button>\n          {/* <button></button> */}\n          </Form.Group>\n\n        </Form>\n      </>\n    \n  \n  )\n\n  \n  \n}\n\nexport default ToDoForm;\n\n// class TodoForm extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = { item: {} };\n//   }\n//   handleInputChange = e => {\n//     this.setState({ item: {...this.state.item, [e.target.name]: e.target.value } });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     e.target.reset();\n//     this.props.handleSubmit(this.state.item);\n//     const item = {};\n//     this.setState({item});\n//   };\n\n//   render() {\n//     return (\n      // <>\n      //   <h3>Add Item</h3>\n      //   <form onSubmit={this.handleSubmit}>\n      //     <label>\n      //       <span>To Do Item</span>\n      //       <input\n      //         name=\"text\"\n      //         placeholder=\"Add To Do List Item\"\n      //         onChange={this.handleInputChange}\n      //       />\n      //     </label>\n      //     <label>\n      //       <span>Difficulty Rating</span>\n      //       <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={this.handleInputChange} />\n      //     </label>\n      //     <label>\n      //       <span>Assigned To</span>\n      //       <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={this.handleInputChange} />\n      //     </label>\n      //     <button>Add Item</button>\n      //   </form>\n      // </>\n//     );\n//   }\n// }\n\n","import React,{useState} from 'react';\n\nexport const SettingContext = React.createContext();\n\nconst SettingProvider = (props)=>{\n  const [showCompleted, setShowCompleted] = useState(false)\n  const [difficulty, setDifficulty] = useState('Ascending')\n  const [itemPerPage,setItemPerPage] = useState(3)\n\n  const setting = {\n    showCompleted,\n    difficulty,\n    itemPerPage,\n    setShowCompleted,\n    setDifficulty,\n    setItemPerPage\n  }\n\n  return(\n    <SettingContext.Provider value={setting}>\n      {props.children}\n    </SettingContext.Provider>\n  )\n}\n\nexport default SettingProvider;","import React ,{useContext,useState,useEffect}from 'react';\nimport {Toast , Badge,Button} from 'react-bootstrap';\nimport './list.scss';\nimport {SettingContext} from  '../../context/todo/settings-context.js' ;\n\n\nconst TodoList = (props) =>{\n  const settingContext = useContext(SettingContext);\n  const [firstIndex, setFirstIndex] = useState(0);\n  let x = props.list.length\n\n  const [stopIndex, setStopIndex] = useState(settingContext.itemPerPage);\n\n  const nextPage = () => {\n    if(stopIndex < x ){\n\n    setFirstIndex(firstIndex+settingContext.itemPerPage);\n    setStopIndex(stopIndex+settingContext.itemPerPage);\n  }\n\n  }\n  const prevPage = () => {\n    if(firstIndex > 0){\n    setFirstIndex(firstIndex-settingContext.itemPerPage);\n    setStopIndex(stopIndex-settingContext.itemPerPage);\n  }\n}\n\nuseEffect(()=>{\n  setStopIndex(firstIndex+settingContext.itemPerPage);\n\n\n},[settingContext.itemPerPage,firstIndex])\n    return (\n      <div>\n        <div hidden>\n\n        {x = props.list.length}\n        </div>\n        {props.list\n        .filter(item=>(settingContext.showCompleted)? true : !item.complete)\n        .sort((a,b) =>{\n          let x;\n          (settingContext.difficulty === 'Ascending') ? x = -1 : x = 1 ;\n          if (a.difficulty>b.difficulty) {return x}\n          if (a.difficulty<b.difficulty) {\n            return(x*(-1));\n          }else{ return 0}\n        }).slice(firstIndex,stopIndex)\n        .map(item => (\n          <Toast\n            onClose = {()=>props.handleDelete(item._id)}\n            // className={`complete-${item.complete.toString()}`}\n            key={item._id}\n            \n          >\n            <Toast.Header closeLabel = 'DeleteTask'>\n              <Badge pill \n              variant = {item.complete?'danger':'success'}  \n              onClick={() => props.handleComplete(item._id)}\n              >  \n              {item.complete?'Completed':'Pending'}\n              </Badge>\n              <strong>{item.assignee}</strong>\n            </Toast.Header>\n            <Toast.Body>\n            <div className = 'toastBody'>\n              <span>\n                {item.text}\n                </span>\n              <small>\n              Difficulty:{item.difficulty}\n              </small>\n            </div>\n            </Toast.Body>\n          </Toast>\n        ))}\n\n        <div className = 'buttons'>\n\n        <Button onClick={nextPage} > Next </Button>\n        <Button onClick={prevPage}> Previous </Button>\n\n        </div>\n\n      </div>\n    );\n}\n\nexport default TodoList;\n","import  { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\n\nconst useAJAX= () => {\nconst [list, setList] = useState([]);\n\n  const _deleteComplete =(id)=>{\n    let url = `${todoAPI}/${id}`\n    axios.delete(url , {\n      headers:{\n        mode:'cors',\n        cache:'no-cache',\n        'Content-Type':'application/json'\n      }\n    }).then(res=>{\n      setList(list.filter((listItem) => listItem._id !== res.data._id));    })\n  }\n\n  const _addItem = (item) => {\n    item.due = new Date();\n    axios.post(todoAPI, item ,{\n     \n      headers:{ \n        mode: 'cors',\n        cache: 'no-cache',\n        'Content-Type': 'application/json' }\n    })\n      .then(res => {\n        setList([...list, res.data])\n      })\n      .catch(console.error);\n  };\n\n  const _toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n\n      item.complete = !item.complete;\n\n      let url = `${todoAPI}/${id}`;\n\n      axios.put(url,item,{\n        headers:{\n          mode:'cors',\n          cache:'no-cache',\n          'Content-Type':'application/json'\n        }\n        \n      })\n        .then(res => {\n          setList(list.map(listItem => listItem._id === item._id ? res.data : listItem));\n        })\n        .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    axios.get(todoAPI, {\n      headers:{\n        mode:'cors',\n        cache:'no-cache',\n      }\n    })\n      .then(res => setList(res.data.results))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n\n  return [list,_getTodoItems, _toggleComplete, _addItem,_deleteComplete]\n}\n\nexport default useAJAX;","import React from 'react'\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport { Navbar } from 'react-bootstrap';\nimport useAJAX from '../../hooks/todo/AJAX-hook.js';\n// import {SettingContext} from  '../../context/todo/settings-context.js' ;\n\nimport './todo.scss';\n\n\n\nconst ToDo = () => {\n\n  const [list,, _toggleComplete, _addItem,_deleteComplete]= useAJAX();\n  \n  \n  \n  return (\n    <>\n      <header>\n      <Navbar bg='dark'>\n\n        <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n        </h2>\n        </Navbar>\n\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={_addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={_toggleComplete}\n            handleDelete = {_deleteComplete}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ToDo;\n"," import React,{useContext} from 'react';\n import {SettingContext} from '../../context/todo/settings-context.js';\n import {Button,Dropdown} from 'react-bootstrap' ;\n// import { render } from 'node-sass';\n\nconst SettingsPage = (props)=>{\n  const settings= useContext(SettingContext);\n  \n  const _toggleVisibility= (e)=>{\n      e.preventDefault()\n      settings.setShowCompleted(!settings.showCompleted)\n  }\n  const changeOrder = (ek,e)=>{\n    e.preventDefault()\n    console.log(e.target.value)\n    settings.setDifficulty(e.target.value)\n}\n  const ChangeItemsNum = (e)=>{\n    // console.log(typeof parseInt(e.target.value, 10),parseInt(e.target.value, 10) )\n    let value = parseInt(e.target.value, 10);\n    if(value){\n    settings.setItemPerPage(value)\n  }\n\n  }\n  return(\n    \n    <div>\n\n      <div>\n       <Button onClick = {_toggleVisibility} > {(settings.showCompleted)? 'Hide Completed':'Show Completed' }</Button>\n      </div>\n    <div>\n   <Dropdown >\n     <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n      Order By Difficulty  \n    </Dropdown.Toggle>\n     <Dropdown.Menu>\n      <Dropdown.Item onSelect={changeOrder} as= \"button\"  value = 'Descending'>Ascending</Dropdown.Item>\n      <Dropdown.Item onSelect={changeOrder} as = \"button\" value = 'Ascending'>Descending</Dropdown.Item>\n     </Dropdown.Menu> \n    </Dropdown>\n    </div>\n\n    <div>\n    <label htmlFor=\"Rap\"> Number of Results Per Page</label>\n    <input name='Rap' type=\"number\" min={1} max={10} placeholder=\"input a number between 1 and 10\" onChange={ChangeItemsNum}></input>\n    \n    </div>\n\n  \n  </div>\n\n\n\n    \n  )\n}\n\nexport default SettingsPage ;","import React from 'react';\n\nimport ToDo from './components/todo/todo-connected.js';\nimport SettingsPage from './components/todo/settings.js';\nimport SettingContextProvider from './context/todo/settings-context.js';\nimport './app.scss';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <SettingContextProvider>\n          <ToDo />\n          <SettingsPage/>\n        </SettingContextProvider>\n\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}